apply plugin: 'com.android.application'
apply plugin: 'com.mob.sdk'

MobSDK {
    appKey "2b51f381fdca0"
    appSecret "dccd349846ac305a5b59978df3424a2b"

    ShareSDK {
        devInfo {
            Wechat {
                appId "wx359eeab705dff0ac"
                appSecret "c72f63ddd5eeb46ba5d37e8cc341c98a"
                userName "gh_afb25ac019c9"
                path "pages/index/index.html?id=1"
                withShareTicket true
                miniprogramType 2
            }

            WechatMoments {
                appId "wx359eeab705dff0ac"
                appSecret "c72f63ddd5eeb46ba5d37e8cc341c98a"
            }
        }
    }
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.ipd.tankking"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi'//, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        // 防止在发布的时候出现因MissingTranslation导致Build Failed!
        disable 'MissingTranslation'
    }

    buildTypes {
        release {
            minifyEnabled false // 混淆
            multiDexEnabled true //分包
//            zipAlignEnabled true // Zipalign优化
//            shrinkResources true // 移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.config
        }
        debug {
            minifyEnabled false // 混淆
            multiDexEnabled true //分包
//            zipAlignEnabled true // Zipalign优化
//            shrinkResources true // 移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.config
        }
    }

    //解决库依赖冲突问题
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v4:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //RxJava2.0所需依赖
    implementation 'io.reactivex.rxjava2:rxjava:2.1.3'

    //Rxandroid2.0线程调度依赖
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    // 大神写的这个库可以支持到rxjava2.X
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    //Retrofit2.0所需依赖
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'

    //结果转为实体类所需依赖
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'

    //OKHttp3.0依赖
    implementation 'com.squareup.okhttp3:okhttp:3.9.0'

    //OKHttp优化策略依赖
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'

    //结果转为基本类型所需依赖
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'

    //自动绑定控件框架 butterknife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    //design依赖
    implementation 'com.android.support:design:28.0.0'

    //多dex配置
    implementation "com.android.support:multidex:1.0.1"

    //dialog
    implementation 'com.github.f0ris.sweetalert:library:1.5.1'

    //处理rxjava内存泄漏,基础组件
    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.0.1'

    //如果你想绑定到Android特定的生命周期
    implementation 'com.trello.rxlifecycle2:rxlifecycle-android:2.0.1'

    //如果你想要预先写好的Activities和Fragments，你可以作为提供者的子类
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.0.1'

    //沉浸式状态栏
    // 基础依赖包，必须要依赖
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0-beta05'
    // fragment快速实现（可选）
    implementation 'com.gyf.immersionbar:immersionbar-components:3.0.0-beta05'

    //万能适配器
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.34'

    //列表框架 recyclerview
    implementation 'com.android.support:recyclerview-v7:28.0.0'

    //图片加载框架 glide
    implementation 'com.github.bumptech.glide:glide:4.1.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.1.1'

    //照片选择器
    implementation 'com.github.wildma:PictureSelector:1.1.2'

    //生成二维码
    implementation 'com.github.yuzhiqiang1993:zxing:2.2.8'

    //支付宝支付
    implementation(name: 'alipaySdk-15.6.2-20190416165100-noUtdid', ext: 'aar')

    //微信支付
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'
}
